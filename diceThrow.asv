% function diceThrow
% clc
% 
% %ved ikke hvad jeg laver haha, forsøg på at bruge uifigure 
% fig = uifigure;
% ax = uiaxes(fig);
% 
% % @Peter knap - udkommenteret da @Maks tester ny knap
% %sb = uibutton(fig,'state','ValueChangedFcn','uiresume()');
% %sb.Value = 0;
% %sb.Text = "Roll Dice";
% 
% % @Maks tester ny knap
% startButton = uibutton(fig,'push','ButtonPushedFcn',@(startButton,event) diceRoll(startButton,ax));
% %sb.Value = 0;
% startButton.Text = "Roll Dice";
% end

%  Chamoux eller 43½ med 7 terninger
% SPILLEREGLER: (Navneforslag til specifik funktion/variabel)

% I hvert slag skal mindst en terning, der tæller, tages fra.(point...)+(regel...)

%  Tæller ingen af terningerne i et slag gives -4 p.(point...)+(regel...)
% 1'ere tæller 1 point (point...)
% 5'ere tæller ½ point (point...)

%  Er der tre fødte i et slag tæller de: (regel...)
% 3*2 = 2 p (point...)
% 3*3 = 3 p (point...)
% 3*4 = 4 p (point...)
% 3*5 = 5 p (point...)
% 3*6 = 6 p (point...)
% 3*1 = 10p (point...)

%  Fødte terninger må ikke skilles ad lig -4 p.(point...)+(regel...)
% Slåes en terning af samme slags, som de fødte i næste slag, 
% fordobles deres værdi. (point...)+(regel...)

%  Slår man 3 par, og er parrene ikke dannet af fødte 
% (fødte må ALDRIG skilles ad = -4 p) 
% og er den sidste terning ikke 1 eller 5, så tæller de som 15 p. (point...)+(regel...)

%  Slår man cameron(1,2,3,4,5,6) i første slag 
% og 7.terning ikke er 1 eller 5, tæller den 20 points. (point...)+(regel...)

%  Hvis alle terninger i et slag tæller, 
% skal slaget slås om, og man tæller sammen på ny. (regel...)
% Sker det for tredie gang i en omgang, får man -4 p. (point...)+(regel...)

%  -4 p, gælder også, hvis man ikke når over 3½ p i sin omgang. (point...)+(regel...)

%  Man må altid bede om mindre end der reelt er, uden at blive straffet. (regel droppes i første omgang)
% Bederman om for mange points, får man -4 p

% SPILLEREGLER SLUT

function diceThrow (startButton,ax,numDice,rollArray,legalArray)
%numDice = 7; %antal terninger    

height = 10; %højden af terningen
width = 10; %Bredden af terningen

startPosx= 5; %x positionen af første terning

numRolls = 10; %antal slag

%rollArray = zeros(1,numDice);

posx = startPosx; % posx bruges i hele dokumentet til at se positionen af terningen
posy = 0-height/2; %sætter midten af terningen til at være i 0 y

diceSpacing = 1.1; %afstand scalar mellem terninger. 

%laver akser på koordinat systemet
axisx = numDice * (diceSpacing*width)+2*posx; %x aksen skal være lang nok til alle terningerne
axisy = axisx/2;

ax.XLim = [0 axisx];
ax.YLim = [-axisy axisy];

%Tegner terningerne 
for t=1:numRolls

for h = 1:numDice
    rectangle(ax,Position=[posx posy height width],Curvature=0.3);

    %ruller terningerne
    n = randi(6);
    drawDiceFace(n)

    %gemmer terninge slaget
    if t == numRolls
        rollArray(h)=n;
    end

    %Rykker næste terning
    posx = posx+diceSpacing*width;
end

%pause så man kan nå at se noget ske. 
pause(0.1)

%genstarter til næste loop

%undgå at slette til sidst
if t == numRolls
    disp(rollArray)
    break
end

posx = startPosx;
cla(ax)
end

disp("done")


    %tegner terninge øjne 
    function drawDiceFace(n)
        rad = 1.8; %radius på terning øjne

        midPos = 0.5;
        smallPos = 0.2;
        bigPos = 0.8;
        
        
        %switch i stedet for if else fordi det er hurtigere B)
        switch n
            case 1
                %Tegner en i midten
                cornerx = cornerPos(posx,width,midPos);
                cornery = cornerPos(posy,height,midPos);
                
                %laver øjet 
                drawPip
            case 2
                %tegner en i syd-vest hjørnet agtigt
                cornerx = cornerPos(posx,width,smallPos);
                cornery = cornerPos(posy,height,smallPos);

                drawPip

                %nord-øst hjørne
                cornerx = cornerPos(posx,width,bigPos);
                cornery = cornerPos(posy,height,bigPos);
                
                drawPip

            case 3
                %syd-vesthjørne
                cornerx = cornerPos(posx,width,smallPos);
                cornery = cornerPos(posy,height,smallPos);
                drawPip

                %nord-øst hjørne
                cornerx = cornerPos(posx,width,bigPos);
                cornery = cornerPos(posy,height,bigPos);
                drawPip
                
                %Midten
                cornerx = cornerPos(posx,width,midPos);
                cornery = cornerPos(posy,height,midPos);
                drawPip
            case 4
                %syd-vesthjørne
                cornerx = cornerPos(posx,width,smallPos);
                cornery = cornerPos(posy,height,smallPos);
                drawPip

                %nord-vesthjørne
                cornerx = cornerPos(posx,width,smallPos);
                cornery = cornerPos(posy,height,bigPos);
                drawPip

                %syd-østhjørne
                cornerx = cornerPos(posx,width,bigPos);
                cornery = cornerPos(posy,height,smallPos);
                drawPip

                %nord-østhjørne
                cornerx = cornerPos(posx,width,bigPos);
                cornery = cornerPos(posy,height,bigPos);
                drawPip

            case 5
                %midten
                cornerx = cornerPos(posx,width,midPos);
                cornery = cornerPos(posy,height,midPos);
                drawPip

                %syd-vesthjørne
                cornerx = cornerPos(posx,width,smallPos);
                cornery = cornerPos(posy,height,smallPos);
                drawPip

                %nord-vesthjørne
                cornerx = cornerPos(posx,width,smallPos);
                cornery = cornerPos(posy,height,bigPos);
                drawPip

                %syd-østhjørne
                cornerx = cornerPos(posx,width,bigPos);
                cornery = cornerPos(posy,height,smallPos);
                drawPip

                %nord-østhjørne
                cornerx = cornerPos(posx,width,bigPos);
                cornery = cornerPos(posy,height,bigPos);
                drawPip

            case 6
                %syd-vesthjørne
                cornerx = cornerPos(posx,width,smallPos);
                cornery = cornerPos(posy,height,smallPos);
                drawPip

                %nord-vesthjørne
                cornerx = cornerPos(posx,width,smallPos);
                cornery = cornerPos(posy,height,bigPos);
                drawPip

                %syd-østhjørne
                cornerx = cornerPos(posx,width,bigPos);
                cornery = cornerPos(posy,height,smallPos);
                drawPip

                %nord-østhjørne
                cornerx = cornerPos(posx,width,bigPos);
                cornery = cornerPos(posy,height,bigPos);
                drawPip

                %mid-vest 
                cornerx = cornerPos(posx,width,smallPos);
                cornery = cornerPos(posy,width,midPos);
                drawPip

                %mid-øst 
                cornerx = cornerPos(posx,width,bigPos);
                cornery = cornerPos(posy,width,midPos);
                drawPip
        end
        
        %Tegner øjne
        function drawPip
            r = rectangle(ax,Position=[cornerx cornery rad rad]);
            r.Curvature=[1 1];
            r.FaceColor='black';
        end
        
        % bestemmer hjørnet af øjne.
        function corner = cornerPos(posVar, rectSize,scalar)
            corner = (posVar + rectSize*scalar) - rad*scalar;

        end
        

    end 
dicePoints(sta,numDice,rollArray,legalArray)
%run("dicePoints(numDice, rollArray)")
end

    
